// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Setting extends pulumi.CustomResource {
    /**
     * Get an existing Setting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SettingState, opts?: pulumi.CustomResourceOptions): Setting {
        return new Setting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sonarqube:index/setting:Setting';

    /**
     * Returns true if the given object is an instance of Setting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Setting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Setting.__pulumiType;
    }

    /**
     * Setting field values for the supplied key
     */
    public readonly fieldValues!: pulumi.Output<{[key: string]: any}[] | undefined>;
    /**
     * Setting key
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Setting value. To reset a value, please use the reset web service.
     */
    public readonly value!: pulumi.Output<string | undefined>;
    /**
     * Setting multi values for the supplied key
     */
    public readonly values!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Setting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SettingArgs | SettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SettingState | undefined;
            resourceInputs["fieldValues"] = state ? state.fieldValues : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
            resourceInputs["values"] = state ? state.values : undefined;
        } else {
            const args = argsOrState as SettingArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["fieldValues"] = args ? args.fieldValues : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["values"] = args ? args.values : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Setting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Setting resources.
 */
export interface SettingState {
    /**
     * Setting field values for the supplied key
     */
    fieldValues?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
    /**
     * Setting key
     */
    key?: pulumi.Input<string>;
    /**
     * Setting value. To reset a value, please use the reset web service.
     */
    value?: pulumi.Input<string>;
    /**
     * Setting multi values for the supplied key
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Setting resource.
 */
export interface SettingArgs {
    /**
     * Setting field values for the supplied key
     */
    fieldValues?: pulumi.Input<pulumi.Input<{[key: string]: any}>[]>;
    /**
     * Setting key
     */
    key: pulumi.Input<string>;
    /**
     * Setting value. To reset a value, please use the reset web service.
     */
    value?: pulumi.Input<string>;
    /**
     * Setting multi values for the supplied key
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}
