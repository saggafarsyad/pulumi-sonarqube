// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # sonarqube.NewCodePeriods
 *
 * Provides a Sonarqube New Code Periods resource. This can be used to manage Sonarqube New Code Periods.
 *
 * ## Example: Set the global new code period to a number of days
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sonarqube from "@pulumi/sonarqube";
 *
 * const codePeriod = new sonarqube.NewCodePeriods("codePeriod", {
 *     type: "NUMBER_OF_DAYS",
 *     value: "7",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class NewCodePeriods extends pulumi.CustomResource {
    /**
     * Get an existing NewCodePeriods resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NewCodePeriodsState, opts?: pulumi.CustomResourceOptions): NewCodePeriods {
        return new NewCodePeriods(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sonarqube:index/newCodePeriods:NewCodePeriods';

    /**
     * Returns true if the given object is an instance of NewCodePeriods.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NewCodePeriods {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NewCodePeriods.__pulumiType;
    }

    public readonly branch!: pulumi.Output<string | undefined>;
    public readonly project!: pulumi.Output<string | undefined>;
    public readonly type!: pulumi.Output<string>;
    public readonly value!: pulumi.Output<string | undefined>;

    /**
     * Create a NewCodePeriods resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NewCodePeriodsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NewCodePeriodsArgs | NewCodePeriodsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NewCodePeriodsState | undefined;
            resourceInputs["branch"] = state ? state.branch : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as NewCodePeriodsArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["branch"] = args ? args.branch : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NewCodePeriods.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NewCodePeriods resources.
 */
export interface NewCodePeriodsState {
    branch?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NewCodePeriods resource.
 */
export interface NewCodePeriodsArgs {
    branch?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    type: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}
