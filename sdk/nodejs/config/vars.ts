// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("sonarqube");

/**
 * Allows anonymizing users on destroy. Requires Sonarqube version >= 9.7.
 */
export declare const anonymizeUserOnDelete: boolean | undefined;
Object.defineProperty(exports, "anonymizeUserOnDelete", {
    get() {
        return __config.getObject<boolean>("anonymizeUserOnDelete");
    },
    enumerable: true,
});

export declare const host: string | undefined;
Object.defineProperty(exports, "host", {
    get() {
        return __config.get("host");
    },
    enumerable: true,
});

export declare const httpProxy: string | undefined;
Object.defineProperty(exports, "httpProxy", {
    get() {
        return __config.get("httpProxy");
    },
    enumerable: true,
});

export declare const installedEdition: string | undefined;
Object.defineProperty(exports, "installedEdition", {
    get() {
        return __config.get("installedEdition");
    },
    enumerable: true,
});

export declare const installedVersion: string | undefined;
Object.defineProperty(exports, "installedVersion", {
    get() {
        return __config.get("installedVersion");
    },
    enumerable: true,
});

export declare const pass: string | undefined;
Object.defineProperty(exports, "pass", {
    get() {
        return __config.get("pass");
    },
    enumerable: true,
});

/**
 * Allows ignoring insecure certificates when set to true. Defaults to false. Disabling TLS verification is dangerous and
 * should only be done for local testing.
 */
export declare const tlsInsecureSkipVerify: boolean | undefined;
Object.defineProperty(exports, "tlsInsecureSkipVerify", {
    get() {
        return __config.getObject<boolean>("tlsInsecureSkipVerify");
    },
    enumerable: true,
});

export declare const token: string | undefined;
Object.defineProperty(exports, "token", {
    get() {
        return __config.get("token");
    },
    enumerable: true,
});

export declare const user: string | undefined;
Object.defineProperty(exports, "user", {
    get() {
        return __config.get("user");
    },
    enumerable: true,
});

