// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Data Source: sonarqube.Rule
 *
 * Use this data source to get a Sonarqube rule resource
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sonarqube from "@pulumi/sonarqube";
 *
 * const rule = sonarqube.getRule({
 *     key: "squid:forbidSonar",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRule(args: GetRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetRuleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sonarqube:index/getRule:getRule", {
        "key": args.key,
    }, opts);
}

/**
 * A collection of arguments for invoking getRule.
 */
export interface GetRuleArgs {
    key: string;
}

/**
 * A collection of values returned by getRule.
 */
export interface GetRuleResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key: string;
    readonly markdownDescription: string;
    readonly name: string;
    readonly severity: string;
    readonly status: string;
    readonly templateKey: string;
    readonly type: string;
}
/**
 * ## # Data Source: sonarqube.Rule
 *
 * Use this data source to get a Sonarqube rule resource
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sonarqube from "@pulumi/sonarqube";
 *
 * const rule = sonarqube.getRule({
 *     key: "squid:forbidSonar",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRuleOutput(args: GetRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRuleResult> {
    return pulumi.output(args).apply((a: any) => getRule(a, opts))
}

/**
 * A collection of arguments for invoking getRule.
 */
export interface GetRuleOutputArgs {
    key: pulumi.Input<string>;
}
