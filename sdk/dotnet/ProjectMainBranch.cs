// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sonarqube
{
    /// <summary>
    /// ## # sonarqube.ProjectMainBranch
    /// 
    /// Provides a Sonarqube Project main branch resource. This can be used to create and manage a Sonarqube Projects main branch.
    /// 
    /// ## Example: Change the name of the main branch
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sonarqube = Pulumi.Sonarqube;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Sonarqube.Project("main", new()
    ///     {
    ///         ProjectName = "my_project",
    ///         Visibility = "public",
    ///     });
    /// 
    ///     var mybranch = new Sonarqube.ProjectMainBranch("mybranch", new()
    ///     {
    ///         Project = "my_project",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Main branch can be imported using their ID
    /// 
    /// terraform
    /// 
    /// ```sh
    /// $ pulumi import sonarqube:index/projectMainBranch:ProjectMainBranch mybranch project/name
    /// ```
    /// </summary>
    [SonarqubeResourceType("sonarqube:index/projectMainBranch:ProjectMainBranch")]
    public partial class ProjectMainBranch : global::Pulumi.CustomResource
    {
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectMainBranch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectMainBranch(string name, ProjectMainBranchArgs args, CustomResourceOptions? options = null)
            : base("sonarqube:index/projectMainBranch:ProjectMainBranch", name, args ?? new ProjectMainBranchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectMainBranch(string name, Input<string> id, ProjectMainBranchState? state = null, CustomResourceOptions? options = null)
            : base("sonarqube:index/projectMainBranch:ProjectMainBranch", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectMainBranch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectMainBranch Get(string name, Input<string> id, ProjectMainBranchState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectMainBranch(name, id, state, options);
        }
    }

    public sealed class ProjectMainBranchArgs : global::Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public ProjectMainBranchArgs()
        {
        }
        public static new ProjectMainBranchArgs Empty => new ProjectMainBranchArgs();
    }

    public sealed class ProjectMainBranchState : global::Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public ProjectMainBranchState()
        {
        }
        public static new ProjectMainBranchState Empty => new ProjectMainBranchState();
    }
}
