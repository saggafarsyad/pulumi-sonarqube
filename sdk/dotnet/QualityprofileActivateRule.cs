// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sonarqube
{
    /// <summary>
    /// ## # sonarqube.QualityprofileActivateRule
    /// 
    /// Provides a Sonarqube Rules resource. This can be used to manage Sonarqube rules.
    /// 
    /// ## Example: activate a rule
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sonarqube = Pulumi.Sonarqube;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var allowedMavenDependencies = new Sonarqube.Rule("allowedMavenDependencies", new()
    ///     {
    ///         CustomKey = "Only_use_allowed_Maven_dependencies",
    ///         MarkdownDescription = "Description",
    ///         Params = "FilePattern=**/pom.xml",
    ///         Severity = "BLOCKER",
    ///         Status = "READY",
    ///         TemplateKey = "xml:XPathCheck",
    ///         Type = "VULNERABILITY",
    ///     });
    /// 
    ///     var xml = new Sonarqube.Qualityprofile("xml", new()
    ///     {
    ///         Language = "xml",
    ///         IsDefault = false,
    ///         Parent = "Sonar way",
    ///     });
    /// 
    ///     var xmlRule = new Sonarqube.QualityprofileActivateRule("xmlRule", new()
    ///     {
    ///         Key = xml.Key,
    ///         Rule = allowedMavenDependencies.Id,
    ///         Severity = "BLOCKER",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [SonarqubeResourceType("sonarqube:index/qualityprofileActivateRule:QualityprofileActivateRule")]
    public partial class QualityprofileActivateRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Quality Profile key. Can be obtained through api/qualityprofiles/search
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
        /// </summary>
        [Output("params")]
        public Output<string?> Params { get; private set; } = null!;

        /// <summary>
        /// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
        /// </summary>
        [Output("reset")]
        public Output<string?> Reset { get; private set; } = null!;

        /// <summary>
        /// Rule key
        /// </summary>
        [Output("rule")]
        public Output<string> Rule { get; private set; } = null!;

        /// <summary>
        /// Rule severity
        /// </summary>
        [Output("severity")]
        public Output<string?> Severity { get; private set; } = null!;


        /// <summary>
        /// Create a QualityprofileActivateRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public QualityprofileActivateRule(string name, QualityprofileActivateRuleArgs args, CustomResourceOptions? options = null)
            : base("sonarqube:index/qualityprofileActivateRule:QualityprofileActivateRule", name, args ?? new QualityprofileActivateRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private QualityprofileActivateRule(string name, Input<string> id, QualityprofileActivateRuleState? state = null, CustomResourceOptions? options = null)
            : base("sonarqube:index/qualityprofileActivateRule:QualityprofileActivateRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing QualityprofileActivateRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static QualityprofileActivateRule Get(string name, Input<string> id, QualityprofileActivateRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new QualityprofileActivateRule(name, id, state, options);
        }
    }

    public sealed class QualityprofileActivateRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Quality Profile key. Can be obtained through api/qualityprofiles/search
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
        /// </summary>
        [Input("params")]
        public Input<string>? Params { get; set; }

        /// <summary>
        /// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
        /// </summary>
        [Input("reset")]
        public Input<string>? Reset { get; set; }

        /// <summary>
        /// Rule key
        /// </summary>
        [Input("rule", required: true)]
        public Input<string> Rule { get; set; } = null!;

        /// <summary>
        /// Rule severity
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        public QualityprofileActivateRuleArgs()
        {
        }
        public static new QualityprofileActivateRuleArgs Empty => new QualityprofileActivateRuleArgs();
    }

    public sealed class QualityprofileActivateRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Quality Profile key. Can be obtained through api/qualityprofiles/search
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
        /// </summary>
        [Input("params")]
        public Input<string>? Params { get; set; }

        /// <summary>
        /// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
        /// </summary>
        [Input("reset")]
        public Input<string>? Reset { get; set; }

        /// <summary>
        /// Rule key
        /// </summary>
        [Input("rule")]
        public Input<string>? Rule { get; set; }

        /// <summary>
        /// Rule severity
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        public QualityprofileActivateRuleState()
        {
        }
        public static new QualityprofileActivateRuleState Empty => new QualityprofileActivateRuleState();
    }
}
