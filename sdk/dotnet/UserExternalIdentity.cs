// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sonarqube
{
    /// <summary>
    /// ## # sonarqube_user_external_entity
    /// 
    /// Updates the *external identity* of a *non local* Sonarqube User. This can be used to set the *Identity Provider* which should be used to
    /// authenticate a specific user.
    /// 
    /// The Sonarqube API currently does not provide an endpoint to read the *external identity* setting of an user.
    /// 
    /// ## Example: change the external identity to SAML
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sonarqube = Pulumi.Sonarqube;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var remoteUserUser = new Sonarqube.User("remoteUserUser", new()
    ///     {
    ///         LoginName = "terraform-test",
    ///         Email = "terraform-test@sonarqube.com",
    ///         IsLocal = false,
    ///     });
    /// 
    ///     var remoteUserUserExternalIdentity = new Sonarqube.UserExternalIdentity("remoteUserUserExternalIdentity", new()
    ///     {
    ///         LoginName = remoteUserUser.LoginName,
    ///         ExternalIdentity = "terraform-test@sonarqube.com",
    ///         ExternalProvider = "saml",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [SonarqubeResourceType("sonarqube:index/userExternalIdentity:UserExternalIdentity")]
    public partial class UserExternalIdentity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identifier of the User used by the Authentication Provider. Changing this forces a new resource to be 
        /// created.
        /// </summary>
        [Output("externalIdentity")]
        public Output<string> ExternalIdentity { get; private set; } = null!;

        /// <summary>
        /// The key of the Authentication Provider. The Authentication Provider must be activated on Sonarqube. Changing 
        /// this forces a new resource to be created.
        /// </summary>
        [Output("externalProvider")]
        public Output<string> ExternalProvider { get; private set; } = null!;

        /// <summary>
        /// The login name of the User to update. Changing this forces a new resource to be created.
        /// </summary>
        [Output("loginName")]
        public Output<string> LoginName { get; private set; } = null!;


        /// <summary>
        /// Create a UserExternalIdentity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserExternalIdentity(string name, UserExternalIdentityArgs args, CustomResourceOptions? options = null)
            : base("sonarqube:index/userExternalIdentity:UserExternalIdentity", name, args ?? new UserExternalIdentityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserExternalIdentity(string name, Input<string> id, UserExternalIdentityState? state = null, CustomResourceOptions? options = null)
            : base("sonarqube:index/userExternalIdentity:UserExternalIdentity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserExternalIdentity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserExternalIdentity Get(string name, Input<string> id, UserExternalIdentityState? state = null, CustomResourceOptions? options = null)
        {
            return new UserExternalIdentity(name, id, state, options);
        }
    }

    public sealed class UserExternalIdentityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the User used by the Authentication Provider. Changing this forces a new resource to be 
        /// created.
        /// </summary>
        [Input("externalIdentity", required: true)]
        public Input<string> ExternalIdentity { get; set; } = null!;

        /// <summary>
        /// The key of the Authentication Provider. The Authentication Provider must be activated on Sonarqube. Changing 
        /// this forces a new resource to be created.
        /// </summary>
        [Input("externalProvider", required: true)]
        public Input<string> ExternalProvider { get; set; } = null!;

        /// <summary>
        /// The login name of the User to update. Changing this forces a new resource to be created.
        /// </summary>
        [Input("loginName", required: true)]
        public Input<string> LoginName { get; set; } = null!;

        public UserExternalIdentityArgs()
        {
        }
        public static new UserExternalIdentityArgs Empty => new UserExternalIdentityArgs();
    }

    public sealed class UserExternalIdentityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the User used by the Authentication Provider. Changing this forces a new resource to be 
        /// created.
        /// </summary>
        [Input("externalIdentity")]
        public Input<string>? ExternalIdentity { get; set; }

        /// <summary>
        /// The key of the Authentication Provider. The Authentication Provider must be activated on Sonarqube. Changing 
        /// this forces a new resource to be created.
        /// </summary>
        [Input("externalProvider")]
        public Input<string>? ExternalProvider { get; set; }

        /// <summary>
        /// The login name of the User to update. Changing this forces a new resource to be created.
        /// </summary>
        [Input("loginName")]
        public Input<string>? LoginName { get; set; }

        public UserExternalIdentityState()
        {
        }
        public static new UserExternalIdentityState Empty => new UserExternalIdentityState();
    }
}
