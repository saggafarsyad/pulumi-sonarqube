// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sonarqube

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/saggafarsyad/pulumi-sonarqube/sdk/go/sonarqube/internal"
)

// ## # QualityprofileActivateRule
//
// Provides a Sonarqube Rules resource. This can be used to manage Sonarqube rules.
//
// ## Example: activate a rule
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/saggafarsyad/pulumi-sonarqube/sdk/go/sonarqube"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			allowedMavenDependencies, err := sonarqube.NewRule(ctx, "allowedMavenDependencies", &sonarqube.RuleArgs{
//				CustomKey:           pulumi.String("Only_use_allowed_Maven_dependencies"),
//				MarkdownDescription: pulumi.String("Description"),
//				Params:              pulumi.String("FilePattern=**/pom.xml"),
//				Severity:            pulumi.String("BLOCKER"),
//				Status:              pulumi.String("READY"),
//				TemplateKey:         pulumi.String("xml:XPathCheck"),
//				Type:                pulumi.String("VULNERABILITY"),
//			})
//			if err != nil {
//				return err
//			}
//			xml, err := sonarqube.NewQualityprofile(ctx, "xml", &sonarqube.QualityprofileArgs{
//				Language:  pulumi.String("xml"),
//				IsDefault: pulumi.Bool(false),
//				Parent:    pulumi.String("Sonar way"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = sonarqube.NewQualityprofileActivateRule(ctx, "xmlRule", &sonarqube.QualityprofileActivateRuleArgs{
//				Key:      xml.Key,
//				Rule:     allowedMavenDependencies.ID(),
//				Severity: pulumi.String("BLOCKER"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type QualityprofileActivateRule struct {
	pulumi.CustomResourceState

	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key pulumi.StringOutput `pulumi:"key"`
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params pulumi.StringPtrOutput `pulumi:"params"`
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset pulumi.StringPtrOutput `pulumi:"reset"`
	// Rule key
	Rule pulumi.StringOutput `pulumi:"rule"`
	// Rule severity
	Severity pulumi.StringPtrOutput `pulumi:"severity"`
}

// NewQualityprofileActivateRule registers a new resource with the given unique name, arguments, and options.
func NewQualityprofileActivateRule(ctx *pulumi.Context,
	name string, args *QualityprofileActivateRuleArgs, opts ...pulumi.ResourceOption) (*QualityprofileActivateRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QualityprofileActivateRule
	err := ctx.RegisterResource("sonarqube:index/qualityprofileActivateRule:QualityprofileActivateRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQualityprofileActivateRule gets an existing QualityprofileActivateRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQualityprofileActivateRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QualityprofileActivateRuleState, opts ...pulumi.ResourceOption) (*QualityprofileActivateRule, error) {
	var resource QualityprofileActivateRule
	err := ctx.ReadResource("sonarqube:index/qualityprofileActivateRule:QualityprofileActivateRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QualityprofileActivateRule resources.
type qualityprofileActivateRuleState struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key *string `pulumi:"key"`
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params *string `pulumi:"params"`
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset *string `pulumi:"reset"`
	// Rule key
	Rule *string `pulumi:"rule"`
	// Rule severity
	Severity *string `pulumi:"severity"`
}

type QualityprofileActivateRuleState struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key pulumi.StringPtrInput
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params pulumi.StringPtrInput
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset pulumi.StringPtrInput
	// Rule key
	Rule pulumi.StringPtrInput
	// Rule severity
	Severity pulumi.StringPtrInput
}

func (QualityprofileActivateRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityprofileActivateRuleState)(nil)).Elem()
}

type qualityprofileActivateRuleArgs struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key string `pulumi:"key"`
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params *string `pulumi:"params"`
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset *string `pulumi:"reset"`
	// Rule key
	Rule string `pulumi:"rule"`
	// Rule severity
	Severity *string `pulumi:"severity"`
}

// The set of arguments for constructing a QualityprofileActivateRule resource.
type QualityprofileActivateRuleArgs struct {
	// Quality Profile key. Can be obtained through api/qualityprofiles/search
	Key pulumi.StringInput
	// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
	Params pulumi.StringPtrInput
	// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
	Reset pulumi.StringPtrInput
	// Rule key
	Rule pulumi.StringInput
	// Rule severity
	Severity pulumi.StringPtrInput
}

func (QualityprofileActivateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*qualityprofileActivateRuleArgs)(nil)).Elem()
}

type QualityprofileActivateRuleInput interface {
	pulumi.Input

	ToQualityprofileActivateRuleOutput() QualityprofileActivateRuleOutput
	ToQualityprofileActivateRuleOutputWithContext(ctx context.Context) QualityprofileActivateRuleOutput
}

func (*QualityprofileActivateRule) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityprofileActivateRule)(nil)).Elem()
}

func (i *QualityprofileActivateRule) ToQualityprofileActivateRuleOutput() QualityprofileActivateRuleOutput {
	return i.ToQualityprofileActivateRuleOutputWithContext(context.Background())
}

func (i *QualityprofileActivateRule) ToQualityprofileActivateRuleOutputWithContext(ctx context.Context) QualityprofileActivateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityprofileActivateRuleOutput)
}

// QualityprofileActivateRuleArrayInput is an input type that accepts QualityprofileActivateRuleArray and QualityprofileActivateRuleArrayOutput values.
// You can construct a concrete instance of `QualityprofileActivateRuleArrayInput` via:
//
//	QualityprofileActivateRuleArray{ QualityprofileActivateRuleArgs{...} }
type QualityprofileActivateRuleArrayInput interface {
	pulumi.Input

	ToQualityprofileActivateRuleArrayOutput() QualityprofileActivateRuleArrayOutput
	ToQualityprofileActivateRuleArrayOutputWithContext(context.Context) QualityprofileActivateRuleArrayOutput
}

type QualityprofileActivateRuleArray []QualityprofileActivateRuleInput

func (QualityprofileActivateRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityprofileActivateRule)(nil)).Elem()
}

func (i QualityprofileActivateRuleArray) ToQualityprofileActivateRuleArrayOutput() QualityprofileActivateRuleArrayOutput {
	return i.ToQualityprofileActivateRuleArrayOutputWithContext(context.Background())
}

func (i QualityprofileActivateRuleArray) ToQualityprofileActivateRuleArrayOutputWithContext(ctx context.Context) QualityprofileActivateRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityprofileActivateRuleArrayOutput)
}

// QualityprofileActivateRuleMapInput is an input type that accepts QualityprofileActivateRuleMap and QualityprofileActivateRuleMapOutput values.
// You can construct a concrete instance of `QualityprofileActivateRuleMapInput` via:
//
//	QualityprofileActivateRuleMap{ "key": QualityprofileActivateRuleArgs{...} }
type QualityprofileActivateRuleMapInput interface {
	pulumi.Input

	ToQualityprofileActivateRuleMapOutput() QualityprofileActivateRuleMapOutput
	ToQualityprofileActivateRuleMapOutputWithContext(context.Context) QualityprofileActivateRuleMapOutput
}

type QualityprofileActivateRuleMap map[string]QualityprofileActivateRuleInput

func (QualityprofileActivateRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityprofileActivateRule)(nil)).Elem()
}

func (i QualityprofileActivateRuleMap) ToQualityprofileActivateRuleMapOutput() QualityprofileActivateRuleMapOutput {
	return i.ToQualityprofileActivateRuleMapOutputWithContext(context.Background())
}

func (i QualityprofileActivateRuleMap) ToQualityprofileActivateRuleMapOutputWithContext(ctx context.Context) QualityprofileActivateRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QualityprofileActivateRuleMapOutput)
}

type QualityprofileActivateRuleOutput struct{ *pulumi.OutputState }

func (QualityprofileActivateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QualityprofileActivateRule)(nil)).Elem()
}

func (o QualityprofileActivateRuleOutput) ToQualityprofileActivateRuleOutput() QualityprofileActivateRuleOutput {
	return o
}

func (o QualityprofileActivateRuleOutput) ToQualityprofileActivateRuleOutputWithContext(ctx context.Context) QualityprofileActivateRuleOutput {
	return o
}

// Quality Profile key. Can be obtained through api/qualityprofiles/search
func (o QualityprofileActivateRuleOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityprofileActivateRule) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Parameters as semi-colon list of =, for example 'params=key1=v1;key2=v2' (Only for custom rule)
func (o QualityprofileActivateRuleOutput) Params() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QualityprofileActivateRule) pulumi.StringPtrOutput { return v.Params }).(pulumi.StringPtrOutput)
}

// Reset severity and parameters of activated rule. Set the values defined on parent profile or from rule default values.
func (o QualityprofileActivateRuleOutput) Reset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QualityprofileActivateRule) pulumi.StringPtrOutput { return v.Reset }).(pulumi.StringPtrOutput)
}

// Rule key
func (o QualityprofileActivateRuleOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v *QualityprofileActivateRule) pulumi.StringOutput { return v.Rule }).(pulumi.StringOutput)
}

// Rule severity
func (o QualityprofileActivateRuleOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QualityprofileActivateRule) pulumi.StringPtrOutput { return v.Severity }).(pulumi.StringPtrOutput)
}

type QualityprofileActivateRuleArrayOutput struct{ *pulumi.OutputState }

func (QualityprofileActivateRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*QualityprofileActivateRule)(nil)).Elem()
}

func (o QualityprofileActivateRuleArrayOutput) ToQualityprofileActivateRuleArrayOutput() QualityprofileActivateRuleArrayOutput {
	return o
}

func (o QualityprofileActivateRuleArrayOutput) ToQualityprofileActivateRuleArrayOutputWithContext(ctx context.Context) QualityprofileActivateRuleArrayOutput {
	return o
}

func (o QualityprofileActivateRuleArrayOutput) Index(i pulumi.IntInput) QualityprofileActivateRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *QualityprofileActivateRule {
		return vs[0].([]*QualityprofileActivateRule)[vs[1].(int)]
	}).(QualityprofileActivateRuleOutput)
}

type QualityprofileActivateRuleMapOutput struct{ *pulumi.OutputState }

func (QualityprofileActivateRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*QualityprofileActivateRule)(nil)).Elem()
}

func (o QualityprofileActivateRuleMapOutput) ToQualityprofileActivateRuleMapOutput() QualityprofileActivateRuleMapOutput {
	return o
}

func (o QualityprofileActivateRuleMapOutput) ToQualityprofileActivateRuleMapOutputWithContext(ctx context.Context) QualityprofileActivateRuleMapOutput {
	return o
}

func (o QualityprofileActivateRuleMapOutput) MapIndex(k pulumi.StringInput) QualityprofileActivateRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *QualityprofileActivateRule {
		return vs[0].(map[string]*QualityprofileActivateRule)[vs[1].(string)]
	}).(QualityprofileActivateRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QualityprofileActivateRuleInput)(nil)).Elem(), &QualityprofileActivateRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityprofileActivateRuleArrayInput)(nil)).Elem(), QualityprofileActivateRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*QualityprofileActivateRuleMapInput)(nil)).Elem(), QualityprofileActivateRuleMap{})
	pulumi.RegisterOutputType(QualityprofileActivateRuleOutput{})
	pulumi.RegisterOutputType(QualityprofileActivateRuleArrayOutput{})
	pulumi.RegisterOutputType(QualityprofileActivateRuleMapOutput{})
}
